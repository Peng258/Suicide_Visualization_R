geom_bar(position="stack", stat="identity")
suicide_per
suicide_per <- suicide %>%
group_by(country,sex) %>%
summarise(suicides_no = sum(suicides_no),
population = sum(population),
suicides_100k_pop = sum(suicides_no)/population *100000)
suicide_per
uicide_per <- suicide %>%
group_by(country,sex) %>%
summarise(suicides_no = sum(suicides_no),
population = sum(population),
suicides_100k_pop = sum(suicides_no)/population *100000)
ggplot(test, aes(fill=sex, y=suicides_no, x=country)) +
geom_bar(position="fill", stat="identity")
suicide_per
ggplot(suicide_per, aes(fill=sex, y=suicides_no, x=country)) +
geom_bar(position="fill", stat="identity")
runApp()
suicide_per
runApp()
suicide_per
suicide_per <- suicide %>%
group_by(country,sex) %>%
summarise(suicides_no = sum(suicides_no),
population = sum(population),
suicides_100k_pop = sum(suicides_no)/population *100000)
test <- suicide_per %>%
spread(sex, suicides_no) %>%
arrange(Male - Female)
suicide_per <- suicide %>%
group_by(country,sex) %>%
summarise(suicides_no = sum(suicides_no),
population = sum(population),
suicides_100k_pop = sum(suicides_no)/population *100000)
test <- suicide_per %>%
spread(sex, suicides_no) %>%
arrange(male - female)
test
suicide_per <- suicide %>%
group_by(country,sex) %>%
summarise(suicides_no = sum(suicides_no),
population = sum(population),
suicides_100k_pop = sum(suicides_no)/population *100000)
test <- suicide_per %>%
spread(sex, suicides_no) %>%
arrange(male - female)
test[is.na(test)] <- 0
suicide_per <- suicide_per %>%
group_by(country,sex) %>%
summarise(male = sum(male),
female = sum(female))
test
suicide_per <- suicide %>%
group_by(country,sex) %>%
summarise(suicides_no = sum(suicides_no),
population = sum(population),
suicides_100k_pop = sum(suicides_no)/population *100000)
test <- suicide_per %>%
spread(sex, suicides_no) %>%
arrange(male - female)
test[is.na(test)] <- 0
suicide_per <- test %>%
group_by(country,sex) %>%
summarise(male = sum(male),
female = sum(female))
suicide_per
test
suicide_per <- suicide %>%
group_by(country,sex) %>%
summarise(suicides_no = sum(suicides_no),
population = sum(population),
suicides_100k_pop = sum(suicides_no)/population *100000)
test <- suicide_per %>%
spread(sex, suicides_no) %>%
arrange(male - female)
test[is.na(test)] <- 0
suicide_per <- test %>%
group_by(country) %>%
summarise(male = sum(male),
female = sum(female))
suicide_per
runApp()
suicide_per
suicide_per <- test %>%
group_by(country) %>%
summarise(male = sum(male),
female = sum(female),
male_pop = sum(male/(male+female)),
female_pop = sum(female/(male+female)))
suicide_per
suicide_per <- test %>%
group_by(country) %>%
summarise(male = sum(male),
female = sum(female),
male_pop = sum(male/(male+female)*100),
female_pop = sum(female/(male+female))*100)
suicide_per
runApp()
suicide_sex_bar_plot <- suicide %>%
group_by(sex)%>%
summarise(suicides_no = sum(suicides_no),
population = sum(population),
"suicides_100k_pop" = suicides_no/population *100000)
suicide_sex_bar_plot
runApp()
suicide_sex_bar_plot
runApp()
suicide_per
runApp()
knitr::opts_chunk$set(echo = TRUE)
suicide_country
suicide_country
suicide_country
runApp()
mapCountryData(countrydata,
nameColumnToPlot="suicides_100k_pop",
mapTitle="The suicide rate by countries",
colourPalette = "reds",
oceanCol="#87CEEB",
missingCountryCol="grey60")
countrydata <- joinCountryData2Map(suicide_country, joinCode = "NAME", nameJoinColumn = "country")
install.packages("rworldmap")
library(rworldmap)
countrydata <- joinCountryData2Map(suicide_country, joinCode = "NAME", nameJoinColumn = "country")
mapCountryData(countrydata,
nameColumnToPlot="suicides_100k_pop",
mapTitle="The suicide rate by countries",
colourPalette = "reds",
oceanCol="#87CEEB",
missingCountryCol="grey60")
suicide_country
runApp()
suicide_country
runApp()
df <- read.csv("https://raw.githubusercontent.com/plotly/datasets/master/2014_world_gdp_with_codes.csv")
df
runApp()
suicide
test <- suicide %>%
group_by(country) %>%
summarise(
suicides_no = sum(suicides_no),
population = sum(population),
suicides_100k_pop = sum(suicides_no) / population * 100000,
gdp = sum (`gdp_for_year ($)`)
)
test
test <- suicide %>%
group_by(country) %>%
summarise(
suicides_no = sum(suicides_no),
population = sum(population),
suicides_100k_pop = sum(suicides_no) / population * 100000
)
test
df
test1 <- test%>%
inner_join(df,by.x = country, by.x = COUNTRY)
test1 <- test%>%
inner_join(df,by.x = COUNTRY, by.x = country)
test1 <- test%>%
inner_join(df,by = c("COUNTRY" = "country"))
names(df)[0] <- "country"
df
df <- names(df)[0] <- "country"
df.head(5)
head(df,5)
head(df)
df
names(df)[0] <- "country"
df
df <- read.csv("https://raw.githubusercontent.com/plotly/datasets/master/2014_world_gdp_with_codes.csv")
df
names(df)[0] <- "country"
df
df %>% rename("country" = COUNTRY)
head(df)
df <- df %>% rename("country" = COUNTRY)
head(df)
df <- read.csv("https://raw.githubusercontent.com/plotly/datasets/master/2014_world_gdp_with_codes.csv")%>% rename("country" = COUNTRY)
df
test <- suicide %>%
group_by(country) %>%
summarise(
suicides_no = sum(suicides_no),
population = sum(population),
suicides_100k_pop = sum(suicides_no) / population * 100000
)
test1 <- test%>%
inner_join(df,by = "country"))
df <- read.csv("https://raw.githubusercontent.com/plotly/datasets/master/2014_world_gdp_with_codes.csv")%>% rename("country" = COUNTRY)
df
test <- suicide %>%
group_by(country) %>%
summarise(
suicides_no = sum(suicides_no),
population = sum(population),
suicides_100k_pop = sum(suicides_no) / population * 100000
)
test1 <- test%>%
inner_join(df,by = "country")
test1
df <- read.csv("https://raw.githubusercontent.com/plotly/datasets/master/2014_world_gdp_with_codes.csv")%>% rename("country" = COUNTRY)
df
test <- suicide %>%
group_by(country) %>%
summarise(
suicides_no = sum(suicides_no),
population = sum(population),
suicides_100k_pop = sum(suicides_no) / population * 100000
)
test1 <- test%>%
left_join(df,by = "country")
test1
View(test1)
View(test1)
View(uicide_per)
test1$CODE[suicide$`country` == 'Bahamas'] <- 'BHM'
test1$CODE[test1$`country` == 'Bahamas'] <- 'BHM'
test1
df <- read.csv("https://raw.githubusercontent.com/plotly/datasets/master/2014_world_gdp_with_codes.csv")%>%
select(COUNTRY,CODE)
rename("country" = COUNTRY)
df
df <- read.csv("https://raw.githubusercontent.com/plotly/datasets/master/2014_world_gdp_with_codes.csv")%>%
select(COUNTRY,CODE)
rename("country" = COUNTRY)
df
test <- suicide %>%
group_by(country) %>%
summarise(
suicides_no = sum(suicides_no),
population = sum(population),
suicides_100k_pop = sum(suicides_no) / population * 100000
)
test1 <- test%>%
left_join(df,by = "country")
test1$CODE[test1$`country` == 'Bahamas'] <- 'BHM'
test1
df
test1 <- test%>%
left_join(df,by = "country")
df <- read.csv("https://raw.githubusercontent.com/plotly/datasets/master/2014_world_gdp_with_codes.csv")%>%
select(COUNTRY,CODE) %>%
rename("country" = COUNTRY)
df
test <- suicide %>%
group_by(country) %>%
summarise(
suicides_no = sum(suicides_no),
population = sum(population),
suicides_100k_pop = sum(suicides_no) / population * 100000
)
test1 <- test%>%
left_join(df,by = "country")
test1$CODE[test1$`country` == 'Bahamas'] <- 'BHM'
test1
test
test1%>% filter(is.na(CODE))
test1$CODE[test1$`country` == 'Bahamas'] <- 'BHM'
test1$CODE[test1$`country` == 'South Korea'] <- 'KOR'
test1%>% filter(is.na(CODE))
test1
runApp()
test1
runApp()
df <- read.csv("https://raw.githubusercontent.com/plotly/datasets/master/2014_world_gdp_with_codes.csv")%>%
select(COUNTRY,CODE) %>%
rename("country" = COUNTRY)
df
test <- suicide %>%
group_by(country,year) %>%
summarise(
suicides_no = sum(suicides_no),
population = sum(population),
suicides_100k_pop = sum(suicides_no) / population * 100000
)
test1 <- test%>%
left_join(df,by = "country")
test1$CODE[test1$`country` == 'Bahamas'] <- 'BHM'
test1$CODE[test1$`country` == 'South Korea'] <- 'KOR'
test1%>% filter(is.na(CODE))
test1
runApp()
df <- read.csv("https://raw.githubusercontent.com/plotly/datasets/master/2014_world_gdp_with_codes.csv")%>%
select(COUNTRY,CODE) %>%
rename("country" = COUNTRY)
df
map_data_1 <- suicide %>%
group_by(country,year) %>%
summarise(
suicides_no = sum(suicides_no),
population = sum(population),
suicides_100k_pop = sum(suicides_no) / population * 100000
)
map_data <- map_data_1%>%
left_join(df,by = "country")
map_data$CODE[map_data$`country` == 'Bahamas'] <- 'BHM'
map_data$CODE[map_data$`country` == 'South Korea'] <- 'KOR'
map_data%>% map_data(is.na(CODE))
map_data
map_data
map_data%>% map_data(is.na(CODE))
df <- read.csv("https://raw.githubusercontent.com/plotly/datasets/master/2014_world_gdp_with_codes.csv")%>%
select(COUNTRY,CODE) %>%
rename("country" = COUNTRY)
df
suicide_map <- suicide %>%
group_by(country,year) %>%
summarise(
suicides_no = sum(suicides_no),
population = sum(population),
suicides_100k_pop = sum(suicides_no) / population * 100000
)
suicide_maps <- suicide_map%>%
left_join(df,by = "country")
suicide_maps$CODE[suicide_maps$`country` == 'Bahamas'] <- 'BHM'
suicide_maps$CODE[suicide_maps$`country` == 'South Korea'] <- 'KOR'
suicide_maps%>% suicide_maps(is.na(CODE))
suicide_maps %>% suicide_maps(is.na(CODE))
suicide_maps
suicide_maps %>% filter(is.na(CODE))
runApp()
runApp()
#GDP per capita
gdp_plot_1 <- suicide_gdp %>%
ggplot(aes(x=gap_per_capita,y=suicides_100k_pop,size = population,color=year))+
geom_point(alpha=0.7)+
scale_size(name="Population (M)")+
xlab("GDP per capita")+
ylab("The suicides 100k/pop") +
ggtitle("The relationship between suicide rate and gdp per capita")+
theme(plot.title = element_text(hjust = 0.5))
suicide
suicide_gdp <- suicide %>%
group_by(country,year) %>%
dplyr::summarise(suicides_no = sum(suicides_no),
population = sum(population),
"suicides_100k_pop" = suicides_no/population *100000,
gdp_for_year = sum(`gdp_for_year ($)`)/12,
gap_per_capita = sum(`gdp_per_capita ($)`)/12
)
suicide_gdp
#GDP per capita
gdp_plot_1 <- suicide_gdp %>%
ggplot(aes(x=gap_per_capita,y=suicides_100k_pop,size = population,color=year))+
geom_point(alpha=0.7)+
scale_size(name="Population (M)")+
xlab("GDP per capita")+
ylab("The suicides 100k/pop") +
ggtitle("The relationship between suicide rate and gdp per capita")+
theme(plot.title = element_text(hjust = 0.5))
gdp_plot_1
#Total GDP
gdp_plot_2 <- suicide_gdp %>%
ggplot(aes(x=gdp_for_year,y=suicides_100k_pop,size = population,color=year))+
geom_point(alpha=0.7)+
scale_size(name="Population (M)")+
xlab("GDP for year")+
ylab("The suicides 100k/pop") +
ggtitle("The relationship between suicide rate and gdp for year")+
theme(plot.title = element_text(hjust = 0.5))
gdp_plot_2
gdp_plot_3 <- ggplot(suicide_gdp, aes(x=gap_per_capita, y=suicides_100k_pop,color=year,size = population)) +
geom_point() +
geom_smooth(method=lm , color="red", fill="#69b3a2", se=TRUE) +
scale_size(name="Population (M)")+
xlab("GDP per capita for year")+
ylab("The suicides 100k/pop") +
ggtitle("The relationship between suicide rate and gdp for year")+
theme(plot.title = element_text(hjust = 0.5))
gdp_plot_3
runApp()
runApp()
suicide_pop
suicide_pop <- suicide %>%
group_by(sex) %>%
summarise(suicides_no = round(sum(suicides_no) / 1000000, 3))
suicide_pop
suicide
runApp()
test <- suicide %>%
group_by(sex,year) %>%
summarise(suicides_no = sum(suicides_no),
population = sum(population))
test
test <- suicide %>%
group_by(year,sex) %>%
summarise(suicides_no = sum(suicides_no),
population = sum(population))
test
suicide_sex
suicide_sex <- suicide %>%
group_by(year,sex) %>%
summarise(suicides_no = sum(suicides_no),
population = sum(population))
suicide_sex
View(suicide_sex)
suicide_sex_3 <- suicide_sex %>%
group_by(sex) %>%
summary(
suicides_no = sum(suicides_no),
population = sum(population),
"suicides_100k_pop" = suicides_no / population * 100000
)
suicide_sex_3
suicide_sex_3
suicide_sex_3 <- suicide_sex %>%
group_by(sex) %>%
summarize(
suicides_no = sum(suicides_no),
population = sum(population),
"suicides_100k_pop" = suicides_no / population * 100000
)
suicide_sex_3
runApp()
suicide_sex_3 <- suicide_sex %>%
# filter(year >= input$yearslider[1]) %>%
# filter(year <= input$yearslider[2]) %>%
group_by(sex) %>%
summarise(
suicides_no = sum(suicides_no),
population = sum(population),
"suicides_100k_pop" = suicides_no / population *
100000
)
suicide_sex_3
runApp()
suicide_sex_3
runApp()
runApp()
runApp()
suicide_age_year <- suicide %>%
group_by(year, age) %>%
summarise(
suicides_no = sum(suicides_no),
population = sum(population),
"suicides_100k_pop" = suicides_no / population * 100000
)
suicide_age_year
runApp()
suicide_age_1
suicide_age
suicide_age
suicide_age <- suicide %>%
group_by(year, age) %>%
summarise(
suicides_no = sum(suicides_no),
population = sum(population),
"suicides_100k_pop" = suicides_no / population * 100000
)
suicide_age
runApp()
suicide
suicide_age <- suicide %>%
group_by(year, age) %>%
summarise(
suicides_no = sum(suicides_no),
population = sum(population),
"suicides_100k_pop" = suicides_no / population * 100000
)
suicide_age
suicide_age
suicide_age_1 <- suicide_age %>%
group_by(age) %>%
summarise(
suicides_no = sum(suicides_no),
population = sum(population),
suicides_100k_pop = suicides_no / population *
100000
)
suicide_age_1
runApp()
suicide_age
runApp()
suicide_age
runApp()
suicide_age_2 <- suicide_age %>% filter(age == "25-34 years")
suicide_age_2
runApp()
suicide
suicide_age_1 <- suicide %>%
filter(age == "35-54 years") %>%
group_by(year) %>%
summarise(
suicides_no = sum(suicides_no),
population = sum(population),
"suicides_100k_pop" = suicides_no / population * 100000
)
suicide_age_1
runApp()
suicide_age_1
runApp()
shiny::runApp()
suicide_country
runApp()
suicide_country
runApp()
View(suicide_country)
runApp()
runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
